What happens when you initialize a repository? Why do you need to do it?

A .git file is added. It sets up the repository for version control so that you can use git.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging Area - Place where files to be commited are.
Working directory - is current directory with files not yet added to staging area.
Repository - files on git and being tracked.

Staging area allows you to select which files you would like to be on git and tracked.

How can you use the staging area to make sure you have one commit per logical
change?

Only add certain file(s) per logical change to staging area you want to commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches useful when wanting to try experimental changes or let's say modifying a site to work in a different language.

Branches help keeping your working demo intact and allow you to work on experimental features without breaking working code.
You can fix bugs in working code (master branch) while working on new experimental features.

How do the diagrams help you visualize the branch structure?

Diagrams help you visualize parent nodes of each commit and their reachability. It will stop you from creating branch commits that can be unreachable (lost) later when you checkout to a different branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

A new node is created which then merges all the commits of both branches. making the last node of each branch the parent of the new merge node (usually the new master tip).

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
